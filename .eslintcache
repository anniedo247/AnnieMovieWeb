[{"/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/index.js":"1","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/reportWebVitals.js":"2","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/App.js":"3","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/pages/MovieList.js":"4","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/components/PublicNavBar.js":"5","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/pages/MovieDetail.js":"6","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/components/Header.js":"7","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/pages/NotFoundPage.js":"8","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/components/PaginationBar.js":"9"},{"size":589,"mtime":1610728555876,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610726537716,"results":"12","hashOfConfig":"11"},{"size":969,"mtime":1613964996760,"results":"13","hashOfConfig":"11"},{"size":4406,"mtime":1618499446306,"results":"14","hashOfConfig":"11"},{"size":1823,"mtime":1613964292414,"results":"15","hashOfConfig":"11"},{"size":3664,"mtime":1618499436649,"results":"16","hashOfConfig":"11"},{"size":200,"mtime":1610789001160,"results":"17","hashOfConfig":"11"},{"size":348,"mtime":1610728984275,"results":"18","hashOfConfig":"11"},{"size":1671,"mtime":1610901419103,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11ua6en",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/index.js",[],["44","45"],"/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/reportWebVitals.js",[],"/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/App.js",["46","47"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MovieList from \"./pages/MovieList\";\nimport MovieDetail from \"./pages/MovieDetail\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport PublicNavBar from \"./components/PublicNavBar\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={MovieList} />\n          <Route \n          path=\"/movie/upcoming\"\n          render={(props)=> < MovieList{...props} type='upcoming'/>}\n          />\n          <Route \n          path=\"/movie/top_rated\"\n          render={(props)=> < MovieList{...props} type='top_rated'/>}\n          />\n          <Route path=\"/movie/:id\" component={MovieDetail} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/pages/MovieList.js",["48","49"],"import React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport PaginationBar from \"../components/PaginationBar\";\nimport InputRange from \"react-input-range\";\nimport \"react-input-range/lib/css/index.css\";\nimport PublicNavBar from \"../components/PublicNavBar\";\nimport Header from \"../components/Header\";\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconst API_URL = process.env.REACT_APP_TMDB_API_URL;\n\nconst MovieList = ({ type }) => {\n  const [movies, setMovies] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPageNum, setTotalPageNum] = useState(1);\n  const [ratingVal, setRatingVal] = useState({ min: 0, max: 10 });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterMovies, setFilterMovies] = useState([]);\n  const [sortType, setSortType] = useState('mostToLeastPopular');\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let endpoint = \"now_playing\";\n      if (type === \"top_rated\") {\n        endpoint = \"top_rated\";\n      }\n      if (type === \"upcoming\") {\n        endpoint = \"upcoming\";\n      }\n      const url = `${API_URL}/movie/${endpoint}?api_key=${API_KEY}&page=${pageNum}`;\n      console.log(url);\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovies(data.results);\n      setFilterMovies(data.results);\n      setTotalPageNum(data.total_pages);\n      console.log(movies);\n    };\n    fetchData();\n  }, [type, pageNum]);\n\n  const movieDetail = (id) => {\n    history.push(`/movie/${id}`);\n  };\n  const handleSearchTermChange = (e) => {\n    setSearchTerm(e.target.value);\n    console.log(e.target.value);\n  };\n  useEffect(() => {\n    const newMovies = movies.filter((m) =>\n      m.title.toLowerCase().startsWith(searchTerm.toLowerCase())\n    );\n    setFilterMovies(newMovies);\n  }, [searchTerm]);\n\n  const sliderChange = (value) => {\n    const newMovies = movies.filter(\n      (m) => m.vote_average >= value.min && m.vote_average <= value.max\n    );\n    setFilterMovies(newMovies);\n    setRatingVal(value);\n  };\n\n  useEffect(()=>{\n    const copyMovies = [...movies]\n    switch(sortType){\n        case 'leastToMostPopular':\n            copyMovies.sort((a,b)=>a.popularity-b.popularity);\n            break;\n        case 'highestToLowestRating':\n            copyMovies.sort((a,b) => b.vote_average - a.vote_average);\n            break;\n        case 'lowestToHighestRating':\n            copyMovies.sort((a,b) => a.vote_average - b.vote_average);\n            break;\n        default:\n            break;\n    }\n    setFilterMovies(copyMovies);\n  },[sortType,movies])\n\n  const handleSelectSort=(e)=>{\n    setSortType(e);\n  }\n\n  return (\n    <div>\n      <PublicNavBar\n        handleSearchTermChange={handleSearchTermChange}\n        searchTerm={searchTerm}\n        handleSelect={handleSelectSort}\n      />\n      <Header/>\n\n      <div className=\"range\">\n        <InputRange\n          maxValue={10}\n          minValue={0}\n          value={ratingVal}\n          onChange={(value) => sliderChange(value)}\n        />\n        Rating\n      </div>\n\n      <Container className=\"d-flex flex-wrap justify-content-between mb-5\">\n        {filterMovies.map((movie) => (\n          <div onClick={() => movieDetail(movie.id)}>\n            <Card key={movie.id} className=\" mt-5\" style={{ width: \"18em\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              />\n              <Card.Body>\n                <Card.Title>{movie.title}</Card.Title>\n                <Card.Text>\n                  <span>{movie.release_date.substring(0, 4)}</span>\n                </Card.Text>\n                <Card.Text>\n                  <span style={{ color: \"red\" }}>♥ </span>{\" \"}\n                  <span>{movie.popularity}</span>\n                  <span className=\"ml-3\" style={{ color: \"red\" }}>\n                    ⭐{\" \"}\n                  </span>{\" \"}\n                  <span>{movie.vote_average}</span>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        ))}\n      </Container>\n      <PaginationBar\n        pageNum={pageNum}\n        setPageNum={setPageNum}\n        totalPageNum={totalPageNum}\n      />\n    </div>\n  );\n};\n\nexport default MovieList;\n","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/components/PublicNavBar.js",["50"],"import React from \"react\";\nimport { Navbar, Nav, NavDropdown, Form, FormControl } from \"react-bootstrap\";\nimport logo from \"../images/logo.png\";\nimport { Link } from \"react-router-dom\";\n\nconst PublicNavBar = ({handleSearchTermChange,searchTerm,handleSelect}) => {\n  \n  return (\n    <Navbar\n      className=\"fixed-top nav-trans\"\n      variant=\"dark\"\n      expand=\"lg\"\n      style={{ fontSize: 20 }}\n    >\n      <Navbar.Brand href=\"#home\">\n        <img src={logo} atl=\"logo\" width=\"200\" />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/\">\n            Currently Playing\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/movie/upcoming\">\n            Upcoming\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/movie/top_rated\">\n            Top Rated\n          </Nav.Link>\n          <NavDropdown title=\"Sort\" id=\"basic-nav-dropdown\" onSelect={handleSelect}>\n            <NavDropdown.Item eventKey=\"mostToLeastPopular\">Most To Least Popular</NavDropdown.Item>\n            <NavDropdown.Item eventKey=\"leastToMostPopular\">Least to Most Popular</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item eventKey=\"highestToLowestRating\">Highest to Lowest Rating</NavDropdown.Item>\n            <NavDropdown.Item eventKey=\"lowestToHighestRating\">Lowest to Highest Rating</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Form inline>\n          <FormControl\n            type=\"text\"\n            onChange={handleSearchTermChange}\n            value={searchTerm}\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n          />\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default PublicNavBar;\n","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/pages/MovieDetail.js",["51","52","53","54"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Media, Modal } from \"react-bootstrap\";\nimport PublicNavBar from \"../components/PaginationBar\";\nimport Header from \"../components/Header\";\nimport \"../App.css\";\nimport YouTube from \"@u-wave/react-youtube\";\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconst API_URL = process.env.REACT_APP_TMDB_API_URL;\n\nconst MovieDetail = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const [key, setKey] = useState(\"\");\n  const [show, setShow] = useState(false);\n  let time = parseInt(movie.runtime);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovie(data);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const getVideo = async () => {\n      const url = `${API_URL}/movie/${id}/videos?api_key=${API_KEY}`;\n      const respone = await fetch(url);\n      const data = await respone.json();\n      console.log(data);\n      setVideos(data.results);\n      const video = data.results[Math.floor(Math.random() * videos.length)];\n      setKey(video.key);\n    };\n    getVideo();\n  }, []);\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n  return (\n    <div>     \n      <div className=\"mt-5\">\n        <Container>\n          <Media style={{ backgroundColor: \"white\" }}>\n            <img\n              width={300}\n              className=\"mr-3\"\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt=\"Generic placeholder\"\n            />\n            <Media.Body className=\"body\">\n              <div className=\"ml-5\">\n                <h2>\n                  <span style={{ fontWeight: \"bolder\" }}>{movie.title}</span>\n                  <span>\n                    ({movie.release_date && movie.release_date.substring(0, 4)})\n                  </span>\n                </h2>\n                {movie.genres &&\n                  movie.genres.map((e) => (\n                    <span className=\"mx-2 mt-5 genres\">{e.name}</span>\n                  ))}\n                <div className=\"mt-5\">\n                  <span>⭐ {movie.vote_average}</span>\n                  <span className=\"ml-5\">\n                    {Math.floor(time / 60) + \"h \" + (time % 60) + \"m\"}\n                  </span>\n                  <button className=\"button\" onClick={handleShow}>\n                    ▶ Play Trailer\n                  </button>\n                  <Modal\n                    show={show}\n                    onHide={handleClose}\n                    size=\"lg\"\n                    aria-labelledby=\"example-custom-modal-styling-title\"\n                  >\n                    <Modal.Header closeButton></Modal.Header>\n                    <Modal.Body>\n                      <YouTube\n                        video={key}\n                        autoplay\n                        width=\"100%\"\n                        height=\"400px\"\n                      />\n                    </Modal.Body>\n                  </Modal>\n                </div>\n                <div\n                  className=\"mt-5\"\n                  style={{ textAlign: \"left\", letterSpacing: \"0.1em\" }}\n                >\n                  <h4>Overview</h4>\n                  <p>{movie.overview}</p>\n                </div>\n              </div>\n            </Media.Body>\n          </Media>\n        </Container>\n        <Container>\" \"</Container>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetail;\n","/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/components/Header.js",[],"/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/pages/NotFoundPage.js",[],"/Volumes/Data/coderSchool/myReact/AnnieMovieWeb/src/components/PaginationBar.js",[],["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":20},{"ruleId":"61","severity":1,"message":"65","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":43,"column":6,"nodeType":"68","endLine":43,"endColumn":21,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"67","line":57,"column":6,"nodeType":"68","endLine":57,"endColumn":18,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":16,"column":9,"nodeType":"73","endLine":16,"endColumn":50},{"ruleId":"61","severity":1,"message":"62","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":20},{"ruleId":"61","severity":1,"message":"65","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"66","severity":1,"message":"74","line":28,"column":6,"nodeType":"68","endLine":28,"endColumn":8,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"76","line":41,"column":6,"nodeType":"68","endLine":41,"endColumn":8,"suggestions":"77"},{"ruleId":"57","replacedBy":"78"},{"ruleId":"59","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'PublicNavBar' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["82"],["83"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["84"],"React Hook useEffect has missing dependencies: 'id' and 'videos.length'. Either include them or remove the dependency array.",["85"],["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [type, pageNum, movies]",{"range":"94","text":"95"},"Update the dependencies array to be: [movies, searchTerm]",{"range":"96","text":"97"},"Update the dependencies array to be: [id]",{"range":"98","text":"99"},"Update the dependencies array to be: [id, videos.length]",{"range":"100","text":"101"},[1565,1580],"[type, pageNum, movies]",[1942,1954],"[movies, searchTerm]",[943,945],"[id]",[1341,1343],"[id, videos.length]"]