{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Data/coderSchool/myReact/movieWeb/src/pages/MovieList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"./inputRange.css\";\nimport { useHistory } from 'react-router-dom';\nimport PaginationBar from \"../components/PaginationBar\";\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nimport PublicNavBar from \"../components/PublicNavBar\";\nimport Header from \"../components/Header\";\nconst API_KEY = \"3f8af128099b08ebdb593c5711c409c3\";\nconst API_URL = \"https://api.themoviedb.org/3\";\n\nconst MovieList = ({\n  type\n}) => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPageNum, setTotalPageNum] = useState(1);\n  const [ratingVal, setRatingVal] = useState({\n    min: 0,\n    max: 10\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterMovies, setFilterMovies] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      let endpoint = \"now_playing\";\n\n      if (type === \"top_rated\") {\n        endpoint = \"top_rated\";\n      }\n\n      if (type === \"upcoming\") {\n        endpoint = \"upcoming\";\n      }\n\n      const url = `${API_URL}/movie/${endpoint}?api_key=${API_KEY}&page=${pageNum}`;\n      console.log(url);\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovies(data.results);\n      setFilterMovies(data.results);\n      setTotalPageNum(data.total_pages);\n      console.log(movies);\n    };\n\n    fetchData();\n  }, [type, pageNum]);\n\n  const movieDetail = id => {\n    history.push(`/movie/${id}`);\n  };\n\n  const handleSearchTermChange = e => {\n    setSearchTerm(e.target.value);\n    console.log(e.target.value);\n  };\n\n  useEffect(() => {\n    const newMovies = movies.filter(m => m.title.toLowerCase().startsWith(searchTerm.toLowerCase()));\n    setFilterMovies(newMovies);\n  }, [searchTerm]);\n  useEffect(() => {\n    const newMovies = movies.filter;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PublicNavBar, {\n      handleSearchTermChange: handleSearchTermChange,\n      searchTerm: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"range\",\n      children: [/*#__PURE__*/_jsxDEV(InputRange, {\n        maxValue: 10,\n        minValue: 0,\n        value: ratingVal,\n        onChange: value => setRatingVal(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), \"Rating\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-wrap justify-content-between mb-5\",\n      children: filterMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => movieDetail(movie.id),\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \" mt-5\",\n          style: {\n            width: \"18em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: movie.release_date.substring(0, 4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"\\u2665 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: movie.popularity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-3\",\n                style: {\n                  color: \"red\"\n                },\n                children: [\"\\u2B50\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: movie.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationBar, {\n      pageNum: pageNum,\n      setPageNum: setPageNum,\n      totalPageNum: totalPageNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"r8E/XGOMsAWhj/gogGiglrueKcA=\", false, function () {\n  return [useHistory];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/Volumes/Data/coderSchool/myReact/movieWeb/src/pages/MovieList.js"],"names":["React","useState","useEffect","Card","Container","useHistory","PaginationBar","InputRange","PublicNavBar","Header","API_KEY","API_URL","MovieList","type","movies","setMovies","pageNum","setPageNum","totalPageNum","setTotalPageNum","ratingVal","setRatingVal","min","max","searchTerm","setSearchTerm","filterMovies","setFilterMovies","history","fetchData","endpoint","url","console","log","respone","fetch","data","json","results","total_pages","movieDetail","id","push","handleSearchTermChange","e","target","value","newMovies","filter","m","title","toLowerCase","startsWith","map","movie","width","poster_path","release_date","substring","color","popularity","vote_average"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport \"./inputRange.css\"\nimport {useHistory} from 'react-router-dom';\nimport PaginationBar from \"../components/PaginationBar\"\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css'\nimport PublicNavBar from \"../components/PublicNavBar\";\nimport Header from \"../components/Header\";\n\nconst API_KEY = \"3f8af128099b08ebdb593c5711c409c3\";\nconst API_URL = \"https://api.themoviedb.org/3\";\n\nconst MovieList = ({ type }) => {\n  const [movies, setMovies] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [totalPageNum, setTotalPageNum] = useState(1)\n  const [ratingVal, setRatingVal]=useState({min:0,max:10});\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [filterMovies, setFilterMovies] =useState([])\n  let history=useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let endpoint = \"now_playing\";\n      if (type === \"top_rated\") {\n        endpoint = \"top_rated\";\n      }\n      if (type === \"upcoming\") {\n        endpoint = \"upcoming\";\n      }\n      const url = `${API_URL}/movie/${endpoint}?api_key=${API_KEY}&page=${pageNum}`;\n      console.log(url);\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovies(data.results);\n      setFilterMovies(data.results);\n      setTotalPageNum(data.total_pages);\n      console.log(movies);\n    };\n    fetchData();\n  }, [type,pageNum]);\n  \n  const movieDetail = (id)=>{\n    history.push(`/movie/${id}`)\n  }\n  const handleSearchTermChange = (e)=>{\n    setSearchTerm(e.target.value)\n    console.log(e.target.value);\n  }\n  useEffect (()=>{\n    const newMovies = movies.filter(m => m.title.toLowerCase().startsWith(searchTerm.toLowerCase()));\n    setFilterMovies(newMovies)\n  },[searchTerm])\n\n  useEffect (()=>{\n    const newMovies= movies.filter\n  })\n\n\n  return (\n    <div>\n      <PublicNavBar handleSearchTermChange={handleSearchTermChange} searchTerm={searchTerm}/>\n      <Header />\n      <div className=\"range\">\n      <InputRange\n      maxValue={10}\n      minValue={0}\n      value = {ratingVal}\n      onChange= {value=> setRatingVal(value)}\n      />\n      Rating\n      </div>\n      \n\n      <Container className=\"d-flex flex-wrap justify-content-between mb-5\">\n      {filterMovies.map((movie) => (\n          <div onClick={()=> movieDetail(movie.id)}>\n            <Card key={movie.id} className=\" mt-5\" style={{ width:\"18em\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              />\n              <Card.Body>\n                <Card.Title>{movie.title}</Card.Title>\n                <Card.Text>\n                  <span>{movie.release_date.substring(0, 4)}</span>\n                </Card.Text>\n                <Card.Text>\n                  <span style={{ color: \"red\" }}>♥ </span>{\" \"}\n                  <span>{movie.popularity}</span>\n                  <span className=\"ml-3\" style={{ color: \"red\" }}>\n                    ⭐{\" \"}\n                  </span>{\" \"}\n                  <span>{movie.vote_average}</span>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        ))}\n     </Container>\n     <PaginationBar\n          pageNum={pageNum}\n          setPageNum={setPageNum}\n          totalPageNum={totalPageNum}\n        />\n    </div>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}