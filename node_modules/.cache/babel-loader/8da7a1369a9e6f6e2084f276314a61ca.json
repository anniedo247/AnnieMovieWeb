{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Data/coderSchool/myReact/movieWeb/src/pages/MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Media } from \"react-bootstrap\";\nimport PublicNavBar from \"../components/PaginationBar\";\nimport Header from \"../components/Header\";\nconst API_KEY = \"3f8af128099b08ebdb593c5711c409c3\";\nconst API_URL = \"https://api.themoviedb.org/3\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState([]);\n  let time = movie.runtime;\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovie(data);\n      console.log(movie);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PublicNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Media, {\n          style: {\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            width: 300,\n            className: \"mr-3\",\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: \"Generic placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Media.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"(\", movie.release_date && movie.release_date.substring(0, 4), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 73\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), movie.genres && movie.genres.map(e => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 48\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetail, \"09I2k64dOJWMIaxJxT7GcoAbwrg=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["/Volumes/Data/coderSchool/myReact/movieWeb/src/pages/MovieDetail.js"],"names":["React","useState","useEffect","useParams","Container","Media","PublicNavBar","Header","API_KEY","API_URL","MovieDetail","id","movie","setMovie","time","runtime","fetchData","url","respone","fetch","data","json","console","log","backgroundColor","poster_path","fontWeight","title","release_date","substring","genres","map","e","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,iBAAjC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAIA,MAAMC,OAAO,GAAG,kCAAhB;AACA,MAAMC,OAAO,GAAG,8BAAhB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIa,IAAI,GAACF,KAAK,CAACG,OAAf;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAI,GAAER,OAAQ,UAASE,EAAG,YAAWH,OAAQ,EAAtD;AACA,YAAMU,OAAO,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA3B;AACA,YAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AACAR,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,KAND;;AAOAI,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAUA,sBACE;AAAA,4BACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACA,QAAC,SAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAACQ,YAAAA,eAAe,EAAC;AAAjB,WAAd;AAAA,kCACE;AACA,YAAA,KAAK,EAAE,GADP;AAEE,YAAA,SAAS,EAAC,MAFZ;AAGE,YAAA,GAAG,EAAG,kCAAiCZ,KAAK,CAACa,WAAY,EAH3D;AAIE,YAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,KAAD,CAAO,IAAP;AAAA,oCACE;AAAA,sCAAI;AAAM,gBAAA,KAAK,EAAE;AAACC,kBAAAA,UAAU,EAAC;AAAZ,iBAAb;AAAA,0BAAqCd,KAAK,CAACe;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAAJ,eAA4D;AAAA,gCAAQf,KAAK,CAACgB,YAAN,IAAoBhB,KAAK,CAACgB,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC,CAAhC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGjB,KAAK,CAACkB,MAAN,IAAclB,KAAK,CAACkB,MAAN,CAAaC,GAAb,CAAiBC,CAAC,iBAAE;AAAA,wBAAOA,CAAC,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,oBAApB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAtCD;;GAAMvB,W;UACWP,S;;;KADXO,W;AAwCN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Media } from \"react-bootstrap\";\nimport PublicNavBar from \"../components/PaginationBar\";\nimport Header from \"../components/Header\";\n\n\n\nconst API_KEY = \"3f8af128099b08ebdb593c5711c409c3\";\nconst API_URL = \"https://api.themoviedb.org/3\";\n\nconst MovieDetail = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  let time=movie.runtime\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n      const respone = await fetch(url);\n      const data = await respone.json();\n      setMovie(data);\n      console.log(movie);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div >\n     <PublicNavBar/>\n     <Header/>\n      <div className=\"mt-5\">\n      <Container >\n        <Media style={{backgroundColor:\"white\"}}>\n          <img\n          width={300}\n            className=\"mr-3\"\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt=\"Generic placeholder\"\n          />\n          <Media.Body>\n            <h2><span style={{fontWeight:'bolder'}}>{movie.title}</span><span>({movie.release_date&&movie.release_date.substring(0, 4)})</span></h2>\n            {movie.genres&&movie.genres.map(e=><span>{e.name}</span>)}\n          </Media.Body>\n        </Media>\n      </Container>\n\n      </div>\n      \n    </div>\n  );\n};\n\nexport default MovieDetail;\n"]},"metadata":{},"sourceType":"module"}